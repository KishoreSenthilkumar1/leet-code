/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */
/**
 * Note: The returned array must be malloced, assume caller calls free().
 */

void fun(struct TreeNode* root, int* tmparray){
    if(!root){return ;}
    tmparray[root->val + 100000]++;
    fun(root->left, tmparray);
    fun(root->right, tmparray);
}
int* findMode(struct TreeNode* root, int* returnSize) {
    
    int* tmparray = (int*)calloc(200001, sizeof(int));
    int maxv = 0;
    int cnt = 0;
    fun(root, tmparray);

    for(int i =0;i< 200001; i++){
        if(tmparray[i]>maxv){
            maxv = tmparray[i];
            cnt=1;
        }else if(tmparray[i]==maxv){cnt++;}
    }
    *returnSize = cnt;
    
    int* ret = (int*)calloc(cnt, sizeof(int));

    cnt = 0;
    for(int i =0;i< 200001; i++){
        if(tmparray[i] == maxv){
            ret[cnt++] = i-100000;
        }
    }
    free(tmparray);
    return ret;
}
