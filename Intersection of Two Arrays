/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* intersection(int* nums1, int nums1Size, int* nums2, int nums2Size, int* returnSize) {
    int common=0;
    int n=1;
    int* arr=(int *)malloc(n*sizeof(int));
    for(int i=0;i<nums1Size;i++){
        int already_present=0;
        for(int j=0;j<nums2Size;j++)
        {
            if(nums1[i]==nums2[j]){
                for(int k=0;k<common;k++){
                    if(arr[k]==nums1[i]){
                        already_present=1;
                        break;
                    }
                }
                if(common==n){
                    n=n*2;
                    arr = (int*)realloc(arr, n * sizeof(int));
                }
                if(!already_present & common<n){
                    arr[common]=nums1[i]; 
                    common++;
                    break;
                }
                

            }

        }
    }
    *returnSize=common;
    return arr;
    
}
