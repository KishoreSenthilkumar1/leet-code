typedef struct {
    int * prefixSum;
} NumArray;


NumArray* numArrayCreate(int* nums, int numsSize) {
    NumArray * item = (NumArray *)malloc(sizeof(NumArray));
    item ->prefixSum = (int *)malloc(sizeof(int)*(numsSize+1));
    
    item -> prefixSum[0] = 0;
    for (int i=0; i<numsSize; i++) {
        item -> prefixSum[i+1] = item -> prefixSum[i] + nums[i];
    }
    return item;
}

int numArraySumRange(NumArray* obj, int left, int right) {
    return obj->prefixSum[right+1] - obj -> prefixSum[left];
}

void numArrayFree(NumArray* obj) {
    free(obj->prefixSum);
    free(obj);
}

/**
 * Your NumArray struct will be instantiated and called as such:
 * NumArray* obj = numArrayCreate(nums, numsSize);
 * int param_1 = numArraySumRange(obj, left, right);
 
 * numArrayFree(obj);
*/
